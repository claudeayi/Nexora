# =========================
#  Build stage
# =========================
FROM node:18-alpine AS builder

WORKDIR /app

# Installe dépendances (plus fiable avec npm ci si lock présent)
COPY package*.json ./
RUN if [ -f package-lock.json ]; then npm ci; else npm install; fi

# Copie sources
COPY index.html ./index.html
COPY vite.config.js ./vite.config.js
COPY src ./src

# Variables de build (Vite lit import.meta.env.* à la compilation)
ARG VITE_API_URL=http://localhost:4000
ARG VITE_TENANT_KEY=default
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_TENANT_KEY=${VITE_TENANT_KEY}

# Build production
RUN npm run build


# =========================
#  Runtime stage (Nginx)
# =========================
FROM nginx:1.25-alpine

# Copie le build Vite
COPY --from=builder /app/dist /usr/share/nginx/html

# Nginx conf optimisée SPA + cache + gzip + headers sécurité
RUN <<'NGINXCONF' bash
cat >/etc/nginx/conf.d/default.conf <<'CONF'
server {
  listen 80;
  server_name _;

  # Racine du site
  root /usr/share/nginx/html;
  index index.html;

  # Gzip (assets Vite déjà minifiés)
  gzip on;
  gzip_types text/plain text/css application/javascript application/json application/xml+rss image/svg+xml;
  gzip_min_length 1024;

  # Sécurité de base (sans CSP stricte pour éviter de casser le SPA)
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=()" always;

  # Santé simple
  location = /healthz { return 200 "ok"; add_header Content-Type text/plain; }

  # Cache agressif pour assets fingerprintés
  location ~* \.(?:js|mjs|css|woff2?|ttf|otf|eot|ico|svg|png|jpg|jpeg|gif)$ {
    expires 30d;
    access_log off;
    add_header Cache-Control "public, max-age=2592000, immutable";
    try_files $uri =404;
  }

  # Cache léger pour autres fichiers (images non fingerprintées…)
  location ~* \.(?:json|webmanifest)$ {
    expires 1h;
    add_header Cache-Control "public, max-age=3600";
    try_files $uri =404;
  }

  # SPA fallback: toutes les routes renvoient index.html
  location / {
    # Empêche la mise en cache de index.html
    add_header Cache-Control "no-store";
    try_files $uri /index.html;
  }
}
CONF
NGINXCONF

EXPOSE 80

# Healthcheck basique
HEALTHCHECK --interval=30s --timeout=3s --retries=3 CMD wget -qO- http://127.0.0.1/healthz || exit 1

# Démarre Nginx au premier plan
CMD ["nginx","-g","daemon off;"]
